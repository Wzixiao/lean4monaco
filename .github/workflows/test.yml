name: Test
run-name: Test editor end-to-end
on:
  workflow_dispatch:
  push:
    branches: ["main"] # replace "main" with the default branch
  pull_request:
    branches: ["main"]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            os: ubuntu-latest
          # - name: macOS
          #   os: macos-latest
          - name: Windows
            os: windows-latest
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: leanprover/lean-action@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          lake-package-directory: "demo/server/LeanProject"
          use-mathlib-cache: false
          build: true
          test: false
          lint: false
      - name: install elan
        if: matrix.os == 'windows-latest'
        run: |
          curl -O --location https://raw.githubusercontent.com/leanprover/elan/master/elan-init.ps1
          echo 1 | powershell -ExecutionPolicy Bypass -f elan-init.ps1
          del elan-init.ps1
          (Resolve-Path ~/.elan/bin).Path >> $Env:GITHUB_PATH
          cd demo\server\LeanProject
          lake build
        shell: pwsh
      # - name: install elan (Windows)
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf > elan-init.sh
      #     sh elan-init.sh -y
      #     echo "$HOME/.elan/bin" >> $GITHUB_PATH
      # - name: lean bui.d (Windows)
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     cd demo\server\LeanProject
      #     lake build
      - uses: actions/setup-node@v3
      - run: npm install --loglevel verbose
      - run: npm audit
        if: matrix.os == 'ubuntu-latest'
        continue-on-error: true
      - run: npm run test
